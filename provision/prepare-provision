#!/bin/bash

# USAGE: provision/prepare-provision

state_file="${STATE_FILE:-./terraform.tfstate}"

fail() {
  echo "$*" >&2
  exit 1
}

cp -R provision.sh provision/provision.sh
(( "$?" == "0" )) ||
  fail "Could not copy the original provision.sh file to the provision folder."




assure_string_in_file() {
  assurefilename=$1
  assuresearchString=$2
  assurereplaceString=$3

  re="s#^.*$assuresearchString.*#$assurereplaceString#"

  #Detect OSX v other linux for sed ''
  if [[ "$(uname -s)" == "Darwin" ]]; then
    sed -i '' "${re}" "$assurefilename"
    (( "$?" == "0" )) ||
      fail "Could not execute execute sed command replace $assuresearchString with $assurereplaceString in file $assurefilename, terminating install."
  else
    sed -i "${re}" "$assurefilename"
    (( "$?" == "0" )) ||
      fail "Could not execute execute sed command replace $assuresearchString with $assurereplaceString in file $assurefilename, terminating install."
  fi

}


AWS_SECURITY_GROUP=${9}

filename_provision="provision/provision.sh"
assure_string_in_file $filename_provision 'AWS_KEY_ID=${1}' "AWS_KEY_ID=\"$(terraform output -state="${state_file}" aws_access_key)\""
assure_string_in_file $filename_provision 'AWS_ACCESS_KEY=${2}' "AWS_ACCESS_KEY=\"$(terraform output -state="${state_file}" aws_secret_key)\""
assure_string_in_file $filename_provision 'AWS_REGION=${3}' "AWS_REGION=\"$(terraform output -state="${state_file}" aws_region)\""
assure_string_in_file $filename_provision 'AWS_KEY=${4}' "AWS_KEY=\"$(terraform output -state="${state_file}" aws_key_name)\""
assure_string_in_file $filename_provision 'SUBNET_ID=${5}' "SUBNET_ID=\"$(terraform output -state="${state_file}" aws_subnet_bosh_id)\""
assure_string_in_file $filename_provision 'SUBNET_PREFIX=${6}' "SUBNET_PREFIX=\"$(terraform output -state="${state_file}" aws_subnet_bosh_prefix)\""
assure_string_in_file $filename_provision 'AVAILABILITY_ZONE=${7}' "AVAILABILITY_ZONE=\"$(terraform output -state="${state_file}" aws_az)\""
assure_string_in_file $filename_provision 'ELASTIC_IP=${8}' "ELASTIC_IP=\"$(terraform output -state="${state_file}" aws_eip_bosh_ip)\""
assure_string_in_file $filename_provision 'AWS_SECURITY_GROUP=${9}' "AWS_SECURITY_GROUP=\"$(terraform output -state="${state_file}" aws_security_group_bosh_name)\""
assure_string_in_file $filename_provision 'IPMASK=${10}' "IPMASK=\"$(terraform output -state="${state_file}" ipmask)\""
